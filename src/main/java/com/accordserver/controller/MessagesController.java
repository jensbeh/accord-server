package com.accordserver.controller;

import com.accordserver.ResponseMessage;
import com.accordserver.accessingdatamysql.messages.Messages;
import com.accordserver.accessingdatamysql.messages.MessagesRepository;
import com.github.cliftonlabs.json_simple.JsonArray;
import com.github.cliftonlabs.json_simple.JsonObject;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

import java.util.List;

import static com.accordserver.util.Constants.SUCCESS;
import static com.accordserver.util.Constants.USER_KEY;

@RestController
public class MessagesController {

    // This means to get the bean called messagesRepository. Which is auto-generated by Spring, we will use it to handle the data
    @Autowired
    private MessagesRepository messagesRepository;

    /**
     * Gets all messages of the given channel, category and server
     * WHO CAN DO? -> ALL SERVER USER
     *
     * @param userKey    key of the user
     * @param serverId   id of the server where the messages should be returned
     * @param categoryId id of the category where the messages should be returned
     * @param channelId  id of the channel where the messages should be returned
     * @param timestamp  time when the message was sent
     * @return json list of all channels of the given category
     */
    @GetMapping("/servers/{serverId}/categories/{categoryId}/channels/{channelId}/messages")
    public @ResponseBody
    ResponseMessage getMessages(@RequestHeader(value = USER_KEY) String userKey, @PathVariable("serverId") String serverId, @PathVariable("categoryId") String categoryId, @PathVariable("channelId") String channelId, @RequestParam String timestamp) {

        List<Messages> MessagesList = (List<Messages>) messagesRepository.findByChannelId(channelId);

        JsonArray responseMessagesDataList = new JsonArray();
        // put all messages
        for (Messages messages : MessagesList) {
            JsonObject responseMessageData = new JsonObject();
            responseMessageData.put("id", messages.getId());
            responseMessageData.put("channel", channelId);
            responseMessageData.put("timestamp", messages.getTimestampMessage());
            responseMessageData.put("from", messages.getFromUser());
            responseMessageData.put("text", messages.getContent());

            responseMessagesDataList.add(responseMessageData);
        }

        return new ResponseMessage(SUCCESS, "", responseMessagesDataList);
    }
}